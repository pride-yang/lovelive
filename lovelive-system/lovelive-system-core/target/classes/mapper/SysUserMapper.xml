<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.yang.mapper.SysUserMapper">

  <resultMap id="BaseResultMap" type="top.yang.domain.entity.SysUser">
    <id property="userId" column="user_id" jdbcType="BIGINT"/>
    <result property="deptId" column="dept_id" jdbcType="BIGINT"/>
    <result property="userName" column="user_name" jdbcType="VARCHAR"/>
    <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
    <result property="userType" column="user_type" jdbcType="VARCHAR"/>
    <result property="email" column="email" jdbcType="VARCHAR"/>
    <result property="phonenumber" column="phonenumber" jdbcType="VARCHAR"/>
    <result property="sex" column="sex" jdbcType="CHAR"/>
    <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
    <result property="password" column="password" jdbcType="VARCHAR"/>
    <result property="status" column="status" jdbcType="CHAR"/>
    <result property="delFlag" column="del_flag" jdbcType="CHAR"/>
    <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
    <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
    <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List">
    user_id
    ,dept_id,user_name,
        nick_name,user_type,email,
        phonenumber,sex,avatar,
        password,status,del_flag,
        login_ip,login_date,create_by,
        create_time,update_by,update_time,
        remark
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId"
    parameterType="top.yang.domain.entity.SysUser" useGeneratedKeys="true">
    insert into sys_user
    ( user_id, dept_id, user_name
    , nick_name, user_type, email
    , phonenumber, sex, avatar
    , password, status, del_flag
    , login_ip, login_date, create_by
    , create_time, update_by, update_time
    , remark)
    values ( #{userId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}
           , #{nickName,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
           , #{phonenumber,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{avatar,jdbcType=VARCHAR}
           , #{password,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR}
           , #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}
           , #{createBy,jdbcType=VARCHAR}
           , #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
           , #{updateTime,jdbcType=TIMESTAMP}
           , #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId"
    parameterType="top.yang.domain.entity.SysUser" useGeneratedKeys="true">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">user_id,</if>
      <if test="deptId != null">dept_id,</if>
      <if test="userName != null">user_name,</if>
      <if test="nickName != null">nick_name,</if>
      <if test="userType != null">user_type,</if>
      <if test="email != null">email,</if>
      <if test="phonenumber != null">phonenumber,</if>
      <if test="sex != null">sex,</if>
      <if test="avatar != null">avatar,</if>
      <if test="password != null">password,</if>
      <if test="status != null">status,</if>
      <if test="delFlag != null">del_flag,</if>
      <if test="loginIp != null">login_ip,</if>
      <if test="loginDate != null">login_date,</if>
      <if test="createBy != null">create_by,</if>
      <if test="createTime != null">create_time,</if>
      <if test="updateBy != null">update_by,</if>
      <if test="updateTime != null">update_time,</if>
      <if test="remark != null">remark,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
      <if test="deptId != null">#{deptId,jdbcType=BIGINT},</if>
      <if test="userName != null">#{userName,jdbcType=VARCHAR},</if>
      <if test="nickName != null">#{nickName,jdbcType=VARCHAR},</if>
      <if test="userType != null">#{userType,jdbcType=VARCHAR},</if>
      <if test="email != null">#{email,jdbcType=VARCHAR},</if>
      <if test="phonenumber != null">#{phonenumber,jdbcType=VARCHAR},</if>
      <if test="sex != null">#{sex,jdbcType=CHAR},</if>
      <if test="avatar != null">#{avatar,jdbcType=VARCHAR},</if>
      <if test="password != null">#{password,jdbcType=VARCHAR},</if>
      <if test="status != null">#{status,jdbcType=CHAR},</if>
      <if test="delFlag != null">#{delFlag,jdbcType=CHAR},</if>
      <if test="loginIp != null">#{loginIp,jdbcType=VARCHAR},</if>
      <if test="loginDate != null">#{loginDate,jdbcType=TIMESTAMP},</if>
      <if test="createBy != null">#{createBy,jdbcType=VARCHAR},</if>
      <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
      <if test="updateBy != null">#{updateBy,jdbcType=VARCHAR},</if>
      <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
      <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.yang.domain.entity.SysUser">
    update sys_user
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.yang.domain.entity.SysUser">
    update sys_user
    set dept_id     = #{deptId,jdbcType=BIGINT},
        user_name   = #{userName,jdbcType=VARCHAR},
        nick_name   = #{nickName,jdbcType=VARCHAR},
        user_type   = #{userType,jdbcType=VARCHAR},
        email       = #{email,jdbcType=VARCHAR},
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
        sex         = #{sex,jdbcType=CHAR},
        avatar      = #{avatar,jdbcType=VARCHAR},
        password    = #{password,jdbcType=VARCHAR},
        status      = #{status,jdbcType=CHAR},
        del_flag    = #{delFlag,jdbcType=CHAR},
        login_ip    = #{loginIp,jdbcType=VARCHAR},
        login_date  = #{loginDate,jdbcType=TIMESTAMP},
        create_by   = #{createBy,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_by   = #{updateBy,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        remark      = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>
