<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.yang.mapper.SysRoleMapper">

  <resultMap id="BaseResultMap" type="top.yang.domain.entity.SysRole">
    <id property="roleId" column="role_id" jdbcType="BIGINT"/>
    <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
    <result property="roleKey" column="role_key" jdbcType="VARCHAR"/>
    <result property="roleSort" column="role_sort" jdbcType="INTEGER"/>
    <result property="dataScope" column="data_scope" jdbcType="CHAR"/>
    <result property="status" column="status" jdbcType="CHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="remark" column="remark" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List">
    role_id
    ,role_name,role_key,
        role_sort,data_scope,status,
        create_time,update_time,remark
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="roleId"
    parameterType="top.yang.domain.entity.SysRole" useGeneratedKeys="true">
    insert into sys_role
    ( role_id, role_name, role_key
    , role_sort, data_scope, status
    , create_time, update_time, remark)
    values ( #{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}
           , #{roleSort,jdbcType=INTEGER}, #{dataScope,jdbcType=CHAR}, #{status,jdbcType=CHAR}
           , #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
           , #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId"
    parameterType="top.yang.domain.entity.SysRole" useGeneratedKeys="true">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">role_id,</if>
      <if test="roleName != null">role_name,</if>
      <if test="roleKey != null">role_key,</if>
      <if test="roleSort != null">role_sort,</if>
      <if test="dataScope != null">data_scope,</if>
      <if test="status != null">status,</if>
      <if test="createTime != null">create_time,</if>
      <if test="updateTime != null">update_time,</if>
      <if test="remark != null">remark,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">#{roleId,jdbcType=BIGINT},</if>
      <if test="roleName != null">#{roleName,jdbcType=VARCHAR},</if>
      <if test="roleKey != null">#{roleKey,jdbcType=VARCHAR},</if>
      <if test="roleSort != null">#{roleSort,jdbcType=INTEGER},</if>
      <if test="dataScope != null">#{dataScope,jdbcType=CHAR},</if>
      <if test="status != null">#{status,jdbcType=CHAR},</if>
      <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
      <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
      <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.yang.domain.entity.SysRole">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null">
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        role_sort = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="dataScope != null">
        data_scope = #{dataScope,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.yang.domain.entity.SysRole">
    update sys_role
    set role_name   = #{roleName,jdbcType=VARCHAR},
        role_key    = #{roleKey,jdbcType=VARCHAR},
        role_sort   = #{roleSort,jdbcType=INTEGER},
        data_scope  = #{dataScope,jdbcType=CHAR},
        status      = #{status,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        remark      = #{remark,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>
